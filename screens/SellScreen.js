import React, { useContext } from "react";
import { 
  View, Text, TouchableOpacity, StyleSheet, Linking, 
  Dimensions, PixelRatio, SafeAreaView, ScrollView
} from "react-native";
import { AuthContext } from "../context/AuthContext";
import { useNavigation } from "@react-navigation/native";

const { width, height } = Dimensions.get("window");
const scaleFont = (size) => size * PixelRatio.getFontScale();

const SellScreen = () => {
  const { user } = useContext(AuthContext);
  const navigation = useNavigation();

  console.log("üß© user:", user);

  const renderContent = () => {
    if (!user) {
      // üîπ Unregistered
      return (
        <>
          <Text style={styles.title}>–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ Virginia Diver?</Text>
          <Text style={styles.subtitle}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Ñ–µ—à–Ω –∫–æ–º—å—é–Ω–∏—Ç–∏ –∏ —Ç.–¥.</Text>
          <TouchableOpacity style={styles.loginButton} onPress={() => navigation.navigate("Login")}>
            <Text style={styles.loginButtonText}>Log in / Sign up</Text>
          </TouchableOpacity>
        </>
      );
    }

    if (user.role === "registered") {
      // üîπ Registered user
      return (
        <>
          <Text style={styles.title}>–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –¥–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</Text>
          <Text style={styles.subtitle}>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</Text>
          <TouchableOpacity style={styles.loginButton} onPress={() => Linking.openURL("https://t.me/amazonicaproject")}>
            <Text style={styles.loginButtonText}>Telegram</Text>
          </TouchableOpacity>
        </>
      );
    }

    if (user.role === "seller") {
      // üîπ Seller
      return (
        <>
          <Text style={styles.title}>–í–∞—à —Ç–æ–≤–∞—Ä –µ—â—ë –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω</Text>
          <View style={styles.featureBox}>
            <Text style={styles.featureTitle}>1. –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω</Text>
            <Text style={styles.featureText}>–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π</Text>
          </View>
          <View style={styles.featureBox}>
            <Text style={styles.featureTitle}>2. –î–æ–±–∞–≤—å—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</Text>
            <Text style={styles.featureText}>–£–∫–∞–∂–∏—Ç–µ, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ–ø–ª–∞—Ç—É –∑–∞ –ø—Ä–æ–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä</Text>
          </View>
          <View style={[styles.featureBox, styles.lastFeatureBox]}>
            <Text style={styles.featureTitle}>3. –û–∂–∏–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞</Text>
            <Text style={styles.featureText}>–í–∞—à –ª–æ—Ç –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 72 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</Text>
          </View>
        </>
      );
    }

    if (user.role === "admin") {
      return (
        <>
          <Text style={styles.title}>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</Text>
          <Text style={styles.subtitle}>
            –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏, —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏
          </Text>
    
          <TouchableOpacity
            style={styles.manageButton}
            onPress={() => navigation.navigate("UserManagementScreen")}
          >
            <Text style={styles.manageButtonText}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</Text>
          </TouchableOpacity>
        </>
      );
    }
    
    // fallback
    return <Text>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: {user.role}</Text>;
  };

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView contentContainerStyle={styles.scrollView}>
        {renderContent()}

        <View style={styles.featureBox}>
          <Text style={styles.featureTitle}>üîí –í—ã –∑–∞—â–∏—â–µ–Ω—ã</Text>
          <Text style={styles.featureText}>–í–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –ø–æ –Ω–∞—à–µ–π Seller Protection Program</Text>
        </View>
        <View style={styles.featureBox}>
          <Text style={styles.featureTitle}>üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ª–µ–≥–∫–æ</Text>
          <Text style={styles.featureText}>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –ø–æ–º–æ—â—å—é CDEK</Text>
        </View>
        <View style={[styles.featureBox, styles.lastFeatureBox]}>
          <Text style={styles.featureTitle}>‚ö° –ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ –±—ã—Å—Ç—Ä–æ</Text>
          <Text style={styles.featureText}>–ü–æ–Ω–∏–∂–∞–π—Ç–µ —Ü–µ–Ω—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –≤–∞—à–∏ –≤–µ—â–∏ –±—ã—Å—Ç—Ä–µ–µ</Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#F9F9F9",
  },
  scrollView: {
    flexGrow: 1,
    paddingHorizontal: width * 0.05,
    paddingVertical: height * 0.02,
    alignItems: "center",
  },
  title: {
    fontSize: scaleFont(24),
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: height * 0.02,
    width: "100%",
  },
  subtitle: {
    fontSize: scaleFont(14),
    textAlign: "center",
    marginBottom: height * 0.02,
    width: "100%",
  },
  loginButton: {
    backgroundColor: "black",
    paddingVertical: height * 0.015,
    paddingHorizontal: width * 0.2,
    borderRadius: 5,
    alignItems: "center",
    marginBottom: height * 0.03,
  },
  loginButtonText: {
    color: "white",
    fontSize: scaleFont(16),
    fontWeight: "bold",
  },
  featureBox: {
    backgroundColor: "white",
    padding: width * 0.04,
    borderRadius: 8,
    marginBottom: height * 0.02,
    elevation: 2,
    width: "100%",
  },
  lastFeatureBox: {
    marginBottom: height * 0.05,
  },
  featureTitle: {
    fontSize: scaleFont(16),
    fontWeight: "bold",
    marginBottom: height * 0.01,
  },
  featureText: {
    fontSize: scaleFont(14),
    color: "gray",
  },
  manageButton: {
    backgroundColor: "black",
    paddingVertical: height * 0.015,
    paddingHorizontal: 24,
    borderRadius: 8,
    alignItems: "center",
    justifyContent: "center",
    marginBottom: height * 0.03,
    width: "100%",
  },
  
  manageButtonText: {
    color: "white",
    fontSize: scaleFont(16),
    fontWeight: "bold",
    textAlign: "center",
  },  
});

export default SellScreen;
