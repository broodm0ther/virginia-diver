import React, { useContext, useEffect, useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Linking,
  Dimensions,
  PixelRatio,
  SafeAreaView,
  ScrollView,
} from "react-native";
import { AuthContext } from "../context/AuthContext";
import { useNavigation } from "@react-navigation/native";

const { width, height } = Dimensions.get("window");
const scaleFont = (size) => size * PixelRatio.getFontScale();

const SellScreen = () => {
  const { user, token } = useContext(AuthContext);
  const navigation = useNavigation();
  const [pendingProducts, setPendingProducts] = useState([]);

  useEffect(() => {
    const fetchPending = async () => {
      if (user?.role === "seller") {
        try {
          const response = await fetch("http://192.168.1.15:8080/api/products/my", {
            headers: { Authorization: `Bearer ${token}` },
          });
          const data = await response.json();
          if (response.ok) {
            setPendingProducts(data.products || []);
          }
        } catch (err) {
          console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–æ–¥–∞–≤—Ü–∞", err);
        }
      }
    };
    fetchPending();
  }, [user]);

  const renderContent = () => {
    if (!user) {
      return (
        <>
          <Text style={styles.title}>–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –Ω–∞ amazonica project?</Text>
          <Text style={styles.subtitle}>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Ñ–µ—à–Ω –∫–æ–º—å—é–Ω–∏—Ç–∏ –∏ —Ç.–¥.</Text>
          <TouchableOpacity style={styles.loginButton} onPress={() => navigation.navigate("Login")}>
            <Text style={styles.loginButtonText}>Log in / Sign up</Text>
          </TouchableOpacity>
        </>
      );
    }

    if (user.role === "registered") {
      return (
        <>
          <Text style={styles.title}>–ß—Ç–æ–±—ã –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –¥–∞–Ω–Ω–æ–π –ø–ª–æ—â–∞–¥–∫–µ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</Text>
          <Text style={styles.subtitle}>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</Text>
          <TouchableOpacity style={styles.loginButton} onPress={() => Linking.openURL("https://t.me/amazonicaproject")}>
            <Text style={styles.loginButtonText}>Telegram</Text>
          </TouchableOpacity>
        </>
      );
    }

    if (user.role === "seller") {
      return (
        <>
          <Text style={styles.title}>–ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ</Text>
          <Text style={styles.subtitle}>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É</Text>

          <TouchableOpacity
            style={styles.loginButton}
            onPress={() => navigation.navigate("AddProductScreen")}
          >
            <Text style={styles.loginButtonText}>–í—ã—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É</Text>
          </TouchableOpacity>

          {pendingProducts.length > 0 && (
            <View style={styles.featureBox}>
              <Text style={styles.featureTitle}>–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ:</Text>
              {pendingProducts.map((item) => (
                <Text key={item.id} style={styles.featureText}>
                  ‚Ä¢ {item.title} ‚Äî –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                </Text>
              ))}
            </View>
          )}
        </>
      );
    }

    if (user.role === "admin") {
      return (
        <>
          <Text style={styles.title}>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</Text>
          <Text style={styles.subtitle}>–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏, —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞–º–∏</Text>
          <TouchableOpacity
            style={styles.manageButton}
            onPress={() => navigation.navigate("UserManagementScreen")}
          >
            <Text style={styles.manageButtonText}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</Text>
          </TouchableOpacity>

          <TouchableOpacity
            style={styles.manageButton}
            onPress={() => navigation.navigate("ProductModerationScreen")}
          >
            <Text style={styles.manageButtonText}>–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π</Text>
          </TouchableOpacity>
        </>
      );
    }

    return <Text>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å: {user.role}</Text>;
  };

  return (
    <SafeAreaView style={styles.safeArea}>
      <ScrollView contentContainerStyle={styles.scrollView}>
        {renderContent()}

        <View style={styles.featureBox}>
          <Text style={styles.featureTitle}>üîí –í—ã –∑–∞—â–∏—â–µ–Ω—ã</Text>
          <Text style={styles.featureText}>–í–∞—à–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –ø–æ –Ω–∞—à–µ–π Seller Protection Program</Text>
        </View>
        <View style={styles.featureBox}>
          <Text style={styles.featureTitle}>üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ª–µ–≥–∫–æ</Text>
          <Text style={styles.featureText}>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å –ø–æ–º–æ—â—å—é CDEK</Text>
        </View>
        <View style={[styles.featureBox, styles.lastFeatureBox]}>
          <Text style={styles.featureTitle}>‚ö° –ü—Ä–æ–¥–∞–≤–∞–π—Ç–µ –±—ã—Å—Ç—Ä–æ</Text>
          <Text style={styles.featureText}>–ü–æ–Ω–∏–∂–∞–π—Ç–µ —Ü–µ–Ω—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å –≤–∞—à–∏ –≤–µ—â–∏ –±—ã—Å—Ç—Ä–µ–µ</Text>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  safeArea: {
    flex: 1,
    backgroundColor: "#F9F9F9",
  },
  scrollView: {
    flexGrow: 1,
    paddingHorizontal: width * 0.05,
    paddingVertical: height * 0.02,
    alignItems: "center",
  },
  title: {
    fontSize: scaleFont(24),
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: height * 0.02,
    width: "100%",
  },
  subtitle: {
    fontSize: scaleFont(14),
    textAlign: "center",
    marginBottom: height * 0.02,
    width: "100%",
  },
  loginButton: {
    backgroundColor: "black",
    paddingVertical: height * 0.015,
    paddingHorizontal: width * 0.2,
    borderRadius: 5,
    alignItems: "center",
    marginBottom: height * 0.03,
  },
  loginButtonText: {
    color: "white",
    fontSize: scaleFont(16),
    fontWeight: "bold",
  },
  featureBox: {
    backgroundColor: "white",
    padding: width * 0.04,
    borderRadius: 8,
    marginBottom: height * 0.02,
    elevation: 2,
    width: "100%",
  },
  lastFeatureBox: {
    marginBottom: height * 0.05,
  },
  featureTitle: {
    fontSize: scaleFont(16),
    fontWeight: "bold",
    marginBottom: height * 0.01,
  },
  featureText: {
    fontSize: scaleFont(14),
    color: "gray",
  },
  manageButton: {
    backgroundColor: "black",
    paddingVertical: height * 0.015,
    paddingHorizontal: 24,
    borderRadius: 8,
    alignItems: "center",
    justifyContent: "center",
    marginBottom: height * 0.03,
    width: "100%",
  },
  manageButtonText: {
    color: "white",
    fontSize: scaleFont(16),
    fontWeight: "bold",
    textAlign: "center",
  },
});

export default SellScreen;
